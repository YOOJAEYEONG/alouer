<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	
<sec:http>
<!--로그인 페이지는 권한을 얻은 후 접근하는 것이 아니라 권한이 없는 사용자가 권한을 얻기위해
	접근하게 되므로 모든 사용자가 접근할 수 있도록 설정해야한다.  -->
	<sec:intercept-url pattern="/member/login" access="permitAll"/>
	<sec:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>

	<sec:intercept-url pattern="/mypage/**" access="hasAnyRole('USER', 'ADMIN', 'ARTIST')"/>
	<sec:intercept-url pattern="/**" access="permitAll"/>
	<!--  <sec:intercept-url pattern="/추가권한필요페이지/**" access="hasRole('USER')"/>-->
	
	<!-- <sec:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/> -->
	<!-- <sec:intercept-url pattern="//**" access="hasAnyRole('USER, ADMIN')"/> -->
	<!--default-target-url ="/" : 로그인 성공하면 메인페이지로 이동하도록 설정함  -->
	<sec:form-login 
		login-page="/member/login"
		default-target-url="/"
		authentication-failure-url="/member/login?error"
		login-processing-url="/member/loginAction"
		username-parameter="email" 
		password-parameter="password"/>
	<sec:logout
		logout-url="/member/logout"
		logout-success-url="/"/>
	<sec:access-denied-handler 
		error-page="/member/accessDenied.do"/>

	<!-- 
	
	<sec:openid-login>
		<sec:attribute-exchange>
			<sec:openid-attribute name="email" type="http://axschema.org/contact/email"/>
		</sec:attribute-exchange>
	</sec:openid-login>
	 -->
		<sec:session-management>
			<sec:concurrency-control max-sessions="3"/>
		</sec:session-management>

		
		<!-- 안드로이드에서 로그인위해 추가함 -->
		<sec:csrf disabled="true"/>
	</sec:http>
	
	<!-- 
	<sec:authentication-manager>
	    <sec:authentication-provider>
	        <sec:user-service>
	            <sec:user name="kosmo_admin1" password="1234" authorities="ROLE_ADMIN"/>
	        </sec:user-service>
	    </sec:authentication-provider>
	</sec:authentication-manager>
	-->

	<!--각 권한에 해당하는 아이디를 가져온다.  -->
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:jdbc-user-service 
				data-source-ref="dataSource"
				role-prefix="" 
				users-by-username-query="SELECT memberid, pass, enabled
					FROM alouer_member WHERE memberid=?"
				authorities-by-username-query=
					"SELECT memberid, authority FROM alouer_member WHERE memberid=?"/>
		</sec:authentication-provider>
	</sec:authentication-manager>


















</beans>


